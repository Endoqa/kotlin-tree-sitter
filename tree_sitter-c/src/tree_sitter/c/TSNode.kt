// this file is auto generated by endoqa kotlin ffi, modify it with caution
package tree_sitter.c

import java.lang.foreign.MemoryLayout
import java.lang.foreign.MemorySegment
import java.lang.foreign.StructLayout
import java.lang.foreign.ValueLayout
import java.lang.invoke.MethodHandle
import java.lang.invoke.VarHandle

@JvmInline
public value class TSNode(
    public val `$mem`: MemorySegment,
) {
    public val context: NativeArray<uint32_t>
        get() = TSNode.contextHandle.invokeExact(this.`$mem`) as MemorySegment

    public var id: Pointer<Unit>
        get() = TSNode.idHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            TSNode.idHandle.set(this.`$mem`, 0L, value)
        }

    public var tree: Pointer<TSTree>
        get() = TSNode.treeHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            TSNode.treeHandle.set(this.`$mem`, 0L, value)
        }

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            MemoryLayout.sequenceLayout(4L, ValueLayout.JAVA_INT).withName("context"),
            `$RuntimeHelper`.POINTER.withName("id"),
            `$RuntimeHelper`.POINTER.withName("tree"),
        ).withName("TSNode")

        @JvmField
        public val contextHandle: MethodHandle =
            layout.sliceHandle(MemoryLayout.PathElement.groupElement("context"))

        @JvmField
        public val idHandle: VarHandle = layout.varHandle(MemoryLayout.PathElement.groupElement("id"))

        @JvmField
        public val treeHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("tree"))
    }
}
