// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.tree_sitter

import java.lang.foreign.*
import java.lang.invoke.MethodHandle
import java.lang.invoke.VarHandle

@JvmInline
public value class TSRange(
    public val `$mem`: MemorySegment,
) {
    public var start_point: TSPoint
        get() = TSPoint(start_pointHandle.invokeExact(this.`$mem`, 0L) as MemorySegment)
        set(`value`) {
            MemorySegment.copy(value.`$mem`, 0L, this.start_point.`$mem`, 0L, TSPoint.layout.byteSize())
        }

    public var end_point: TSPoint
        get() = TSPoint(end_pointHandle.invokeExact(this.`$mem`, 0L) as MemorySegment)
        set(`value`) {
            MemorySegment.copy(value.`$mem`, 0L, this.end_point.`$mem`, 0L, TSPoint.layout.byteSize())
        }

    public var start_byte: UInt
        get() = (start_byteHandle.get(this.`$mem`, 0L) as Int).toUInt()
        set(`value`) {
            start_byteHandle.set(this.`$mem`, 0L, value.toInt())
        }

    public var end_byte: UInt
        get() = (end_byteHandle.get(this.`$mem`, 0L) as Int).toUInt()
        set(`value`) {
            end_byteHandle.set(this.`$mem`, 0L, value.toInt())
        }

    public constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(layout)
    })

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            TSPoint.layout.withName("start_point"),
            TSPoint.layout.withName("end_point"),
            ValueLayout.JAVA_INT.withName("start_byte"),
            ValueLayout.JAVA_INT.withName("end_byte"),
        ).withName("TSRange")

        @JvmField
        public val start_pointHandle: MethodHandle =
            layout.sliceHandle(MemoryLayout.PathElement.groupElement("start_point"))

        @JvmField
        public val end_pointHandle: MethodHandle =
            layout.sliceHandle(MemoryLayout.PathElement.groupElement("end_point"))

        @JvmField
        public val start_byteHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("start_byte"))

        @JvmField
        public val end_byteHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("end_byte"))

        @JvmStatic
        public fun allocate(alloc: SegmentAllocator): TSRange = TSRange(alloc.allocate(layout))
    }
}
