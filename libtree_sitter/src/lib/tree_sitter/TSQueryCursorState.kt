// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.tree_sitter

import java.lang.foreign.*
import java.lang.invoke.VarHandle

@JvmInline
public value class TSQueryCursorState(
    public val `$mem`: MemorySegment,
) {
    public var payload: Pointer<Unit>
        get() = payloadHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            payloadHandle.set(this.`$mem`, 0L, value)
        }

    public var current_byte_offset: UInt
        get() = (current_byte_offsetHandle.get(this.`$mem`, 0L) as Int).toUInt()
        set(`value`) {
            current_byte_offsetHandle.set(this.`$mem`, 0L, value.toInt())
        }

    public constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(layout)
    })

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            `$RuntimeHelper`.POINTER.withName("payload"),
            ValueLayout.JAVA_INT.withName("current_byte_offset"),
            MemoryLayout.paddingLayout(4),
        ).withName("TSQueryCursorState")

        @JvmField
        public val payloadHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("payload"))

        @JvmField
        public val current_byte_offsetHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("current_byte_offset"))

        @JvmStatic
        public fun allocate(alloc: SegmentAllocator): TSQueryCursorState =
            TSQueryCursorState(alloc.allocate(layout))
    }
}
