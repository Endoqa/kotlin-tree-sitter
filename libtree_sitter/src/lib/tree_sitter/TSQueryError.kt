// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.tree_sitter

import java.lang.invoke.MethodHandle
import java.lang.invoke.MethodHandles
import java.lang.invoke.MethodType
import kotlin.Int

public enum class TSQueryError(
    public val `value`: Int,
) {
    None(0),
    Syntax(1),
    NodeType(2),
    Field(3),
    Capture(4),
    Structure(5),
    Language(6),
    ;

    public companion object {
        @JvmStatic
        public val fromInt: MethodHandle = MethodHandles.lookup().findStatic(
            TSQueryError::class.java,
            "fromInt",
            MethodType.methodType(TSQueryError::class.java, Int::class.java)
        )

        @JvmStatic
        public val toInt: MethodHandle = MethodHandles.lookup().findGetter(
            TSQueryError::class.java,
            "value",
            Int::class.java
        )

        @JvmStatic
        public fun fromInt(`value`: Int): TSQueryError = when (value) {
            None.value -> None
            Syntax.value -> Syntax
            NodeType.value -> NodeType
            Field.value -> Field
            Capture.value -> Capture
            Structure.value -> Structure
            Language.value -> Language
            else -> error("enum not found")
        }
    }
}
