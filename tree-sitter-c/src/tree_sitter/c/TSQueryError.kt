// this file is auto generated by endoqa kotlin ffi, modify it with caution
package tree_sitter.c

import java.lang.invoke.MethodHandle
import java.lang.invoke.MethodHandles
import java.lang.invoke.MethodType
import kotlin.Int

public enum class TSQueryError(
    public val `value`: Int,
) {
    TSQueryErrorNone(0x00000000),
    TSQueryErrorSyntax(0x00000001),
    TSQueryErrorNodeType(0x00000002),
    TSQueryErrorField(0x00000003),
    TSQueryErrorCapture(0x00000004),
    TSQueryErrorStructure(0x00000005),
    TSQueryErrorLanguage(0x00000006),
    ;

    public companion object {
        @JvmStatic
        public val fromInt: MethodHandle = MethodHandles.lookup().findStatic(
            TSQueryError::class.java,
            "fromInt",
            MethodType.methodType(TSQueryError::class.java, Int::class.java)
        )

        @JvmStatic
        public val toInt: MethodHandle = MethodHandles.lookup().findGetter(
            TSQueryError::class.java,
            "value",
            Int::class.java
        )

        @JvmStatic
        public fun fromInt(`value`: Int): TSQueryError = when (value) {
            0x00000000 -> TSQueryErrorNone
            0x00000001 -> TSQueryErrorSyntax
            0x00000002 -> TSQueryErrorNodeType
            0x00000003 -> TSQueryErrorField
            0x00000004 -> TSQueryErrorCapture
            0x00000005 -> TSQueryErrorStructure
            0x00000006 -> TSQueryErrorLanguage
            else -> error("enum not found")
        }
    }
}
